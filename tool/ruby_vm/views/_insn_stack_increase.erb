%# -*- mode:c; style:ruby; coding: utf-8; indent-tabs-mode: nil -*-
%# Copyright (c) 2016 Urabe, Shyouhei.  All rights reserved.
%#
%# This file is a part of  the programming language Ruby.  Permission is hereby
%# granted, to either  redistribute and/or modify this file,  provided that the
%# conditions mentioned  in the file  COPYING are  met.  Consult that  file for
%# details.
%#
#ifdef USE_INSN_STACK_INCREASE
PUREFUNC(MAYBE_UNUSED(static int insn_stack_increase(int depth, int insn, const VALUE *opes)));
PUREFUNC(static rb_num_t insn_stack_increase_dispatch(enum ruby_vminsn_type insn, const VALUE *opes));

rb_num_t
insn_stack_increase_dispatch(enum ruby_vminsn_type insn, const VALUE *opes)
{
    static const signed char t[] = {
% RubyVM::Instructions.each_slice 8 do |a|
        <%= a.map { |i|
          if i.has_attribute?('sp_inc')
            '-127'
          else
            sprintf("%4d", i.rets.size - i.pops.size)
          end
        }.join(', ') -%>,
% end
    };
    char c = t[insn];

    if (c != -127) {
        return c;
    }
    else switch(insn) {
    default:
        UNREACHABLE;
% RubyVM::Instructions.each do |i|
%   next unless i.has_attribute?('sp_inc')
%   _, f, a = i.sp_inc.signature
    case <%= i.bin %>:
        return <%= f %>(<%=
          a.map.with_index do |(_, v), j|
            i.cast_from_VALUE v, "opes[#{j}]"
          end.join(", ")
        %>);
% end
    }
}

int
insn_stack_increase(int depth, int insn, const VALUE *opes)
{
    enum ruby_vminsn_type itype = (enum ruby_vminsn_type)insn;
    return depth + (int)insn_stack_increase_dispatch(itype, opes);
};
#endif
